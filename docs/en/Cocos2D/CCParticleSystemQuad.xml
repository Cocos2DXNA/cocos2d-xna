<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCParticleSystemQuad" FullName="Cocos2D.CCParticleSystemQuad">
  <TypeSignature Language="C#" Value="public class CCParticleSystemQuad : Cocos2D.CCParticleSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCParticleSystemQuad extends Cocos2D.CCParticleSystem" />
  <AssemblyInfo>
    <AssemblyName>cocos2d-xna</AssemblyName>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Cocos2D.CCParticleSystem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>&lt;para&gt;
  &lt;see cref="T:Cocos2D.CCParticleSystemQuad" /&gt; is a subclass of &lt;see cref="T:Cocos2D.CCParticleSystem" /&gt;. &lt;/para&gt;&lt;see cref="T:Cocos2D.CCParticleSystemQuad" /&gt;&lt;see cref="T:Cocos2D.CCParticleSystem" /&gt;</summary>
    <remarks>&lt;para&gt;It includes all the features of &lt;see cref="T:Cocos2D.CCParticleSystem" /&gt;.&lt;/para&gt;&lt;see cref="T:Cocos2D.CCParticleSystem" /&gt;&lt;para&gt;Special features and Limitations:&lt;list type="bullet"&gt;&lt;item&gt;&lt;description&gt;Particle size can be any float number.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;The system can be scaled&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;The particles can be rotated&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;It supports subrects&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;It supports batched rendering since 1.1 v0.8 &lt;/description&gt;&lt;/item&gt;&lt;/list&gt;&lt;/para&gt;&lt;list type="bullet"&gt;
  &lt;item&gt;
    &lt;description&gt;Particle size can be any float number.&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;The system can be scaled&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;The particles can be rotated&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;It supports subrects&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;It supports batched rendering since 1.1 v0.8 &lt;/description&gt;
  &lt;/item&gt;
&lt;/list&gt;&lt;para&gt;Particle size can be any float number.&lt;/para&gt;&lt;para&gt;The system can be scaled&lt;/para&gt;&lt;para&gt;The particles can be rotated&lt;/para&gt;&lt;para&gt;It supports subrects&lt;/para&gt;&lt;para&gt;It supports batched rendering since 1.1 &lt;para&gt;v0.8 &lt;/para&gt;&lt;/para&gt;&lt;para&gt;v0.8 &lt;/para&gt;&lt;para&gt;v0.8 &lt;/para&gt;</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCParticleSystemQuad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>creates an initializes a ParticleSystemQuad from a plist file.
 This plist files can be created manually or with Particle Designer: </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCParticleSystemQuad (int numberOfParticles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 numberOfParticles) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="numberOfParticles" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfParticles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCParticleSystemQuad (string plistFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string plistFile) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="plistFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="plistFile">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchNode">
      <MemberSignature Language="C#" Value="public override Cocos2D.CCParticleBatchNode BatchNode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Cocos2D.CCParticleBatchNode BatchNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCParticleBatchNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setBatchNode </summary>
        <value>To be added.</value>
        <remarks>setBatchNode </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Cocos2D.CCParticleSystemQuad Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Cocos2D.CCParticleSystemQuad Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCParticleSystemQuad</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public override void Draw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Draw() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Override this method to draw your own node. The following GL states will be enabled by default:glEnableClientState(GL_VERTEX_ARRAY);glEnableClientState(GL_COLOR_ARRAY);glEnableClientState(GL_TEXTURE_COORD_ARRAY);glEnable(GL_TEXTURE_2D); AND YOU SHOULD NOT DISABLE THEM AFTER DRAWING YOUR NODE But if you enable any other GL state, you should disable it after drawing your node. </summary>
        <remarks>&lt;para&gt;Override this method to draw your own node. The following GL states will be enabled by default:&lt;list type="bullet"&gt;&lt;item&gt;&lt;description&gt;glEnableClientState(GL_VERTEX_ARRAY);&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;glEnableClientState(GL_COLOR_ARRAY);&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;glEnableClientState(GL_TEXTURE_COORD_ARRAY);&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;glEnable(GL_TEXTURE_2D); AND YOU SHOULD NOT DISABLE THEM AFTER DRAWING YOUR NODE But if you enable any other GL state, you should disable it after drawing your node. &lt;/description&gt;&lt;/item&gt;&lt;/list&gt;&lt;/para&gt;&lt;list type="bullet"&gt;
  &lt;item&gt;
    &lt;description&gt;glEnableClientState(GL_VERTEX_ARRAY);&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;glEnableClientState(GL_COLOR_ARRAY);&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;glEnableClientState(GL_TEXTURE_COORD_ARRAY);&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;glEnable(GL_TEXTURE_2D); AND YOU SHOULD NOT DISABLE THEM AFTER DRAWING YOUR NODE But if you enable any other GL state, you should disable it after drawing your node. &lt;/description&gt;
  &lt;/item&gt;
&lt;/list&gt;&lt;para&gt;glEnableClientState(GL_VERTEX_ARRAY);&lt;/para&gt;&lt;para&gt;glEnableClientState(GL_COLOR_ARRAY);&lt;/para&gt;&lt;para&gt;glEnableClientState(GL_TEXTURE_COORD_ARRAY);&lt;/para&gt;&lt;para&gt;glEnable(GL_TEXTURE_2D); AND YOU SHOULD NOT DISABLE THEM AFTER DRAWING YOUR NODE But if you enable any other GL state, you should disable it after drawing your node. &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitWithTotalParticles">
      <MemberSignature Language="C#" Value="public override bool InitWithTotalParticles (int numberOfParticles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool InitWithTotalParticles(int32 numberOfParticles) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfParticles" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfParticles">To be added.</param>
        <summary>Initializes a system with a fixed number of particles. </summary>
        <returns>To be added.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="PostStep">
      <MemberSignature Language="C#" Value="protected override void PostStep ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PostStep() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>should be overridden by subclasses </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayFrame">
      <MemberSignature Language="C#" Value="public void SetDisplayFrame (Cocos2D.CCSpriteFrame spriteFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDisplayFrame(class Cocos2D.CCSpriteFrame spriteFrame) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spriteFrame" Type="Cocos2D.CCSpriteFrame" />
      </Parameters>
      <Docs>
        <param name="spriteFrame">To be added.</param>
        <summary>Sets a new SpriteFrame as particle.
 WARNING: this method is experimental. Use setTexture:withRect instead. v0.99.4 </summary>
        <remarks>&lt;para&gt;
  &lt;verbatim&gt;Sets a new SpriteFrame as particle.
&lt;/verbatim&gt; WARNING: this method is experimental. Use setTexture:withRect instead. &lt;para&gt;v0.99.4 &lt;/para&gt;&lt;/para&gt;&lt;verbatim&gt;Sets a new SpriteFrame as particle.
&lt;/verbatim&gt;&lt;para&gt;v0.99.4 &lt;/para&gt;&lt;para&gt;v0.99.4 &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextureWithRect">
      <MemberSignature Language="C#" Value="public void SetTextureWithRect (Cocos2D.CCTexture2D texture, Cocos2D.CCRect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextureWithRect(class Cocos2D.CCTexture2D texture, valuetype Cocos2D.CCRect rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="Cocos2D.CCTexture2D" />
        <Parameter Name="rect" Type="Cocos2D.CCRect" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="rect">To be added.</param>
        <summary>Sets a new texture with a rect. The rect is in Points.
v0.99.4 </summary>
        <remarks>&lt;para&gt;
  &lt;verbatim&gt;Sets a new texture with a rect. The rect is in Points.
&lt;/verbatim&gt;
  &lt;para&gt;v0.99.4 &lt;/para&gt;
&lt;/para&gt;&lt;verbatim&gt;Sets a new texture with a rect. The rect is in Points.
&lt;/verbatim&gt;&lt;para&gt;v0.99.4 &lt;/para&gt;&lt;para&gt;v0.99.4 &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="Texture">
      <MemberSignature Language="C#" Value="public override Cocos2D.CCTexture2D Texture { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Cocos2D.CCTexture2D Texture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCTexture2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setTexture </summary>
        <value>To be added.</value>
        <remarks>setTexture </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalParticles">
      <MemberSignature Language="C#" Value="public override int TotalParticles { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalParticles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setTotalParticles </summary>
        <value>To be added.</value>
        <remarks>setTotalParticles </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateQuadsWithParticles">
      <MemberSignature Language="C#" Value="public override void UpdateQuadsWithParticles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateQuadsWithParticles() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>