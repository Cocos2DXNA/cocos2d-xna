<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCTMXLayer" FullName="Cocos2D.CCTMXLayer">
  <TypeSignature Language="C#" Value="public class CCTMXLayer : Cocos2D.CCSpriteBatchNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCTMXLayer extends Cocos2D.CCSpriteBatchNode" />
  <AssemblyInfo>
    <AssemblyName>cocos2d-xna</AssemblyName>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Cocos2D.CCSpriteBatchNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>&lt;para&gt;
  &lt;see cref="T:Cocos2D.CCTMXLayer" /&gt; represents the TMX layer. &lt;/para&gt;&lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;</summary>
    <remarks>&lt;para&gt;It is a subclass of &lt;see cref="T:Cocos2D.CCSpriteBatchNode" /&gt;. By default the tiles are rendered using a &lt;see cref="T:Cocos2D.CCTextureAtlas" /&gt;. If you modify a tile on runtime, then, that tile will become a &lt;see cref="T:Cocos2D.CCSprite" /&gt;, otherwise no &lt;see cref="T:Cocos2D.CCSprite" /&gt; objects are created. The benefits of using &lt;see cref="T:Cocos2D.CCSprite" /&gt; objects as tiles are:&lt;list type="bullet"&gt;&lt;item&gt;&lt;description&gt;tiles (Sprite) can be rotated/scaled/moved with a nice API&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;&lt;/para&gt;&lt;see cref="T:Cocos2D.CCSpriteBatchNode" /&gt;&lt;see cref="T:Cocos2D.CCTextureAtlas" /&gt;&lt;see cref="T:Cocos2D.CCSprite" /&gt;&lt;see cref="T:Cocos2D.CCSprite" /&gt;&lt;see cref="T:Cocos2D.CCSprite" /&gt;&lt;list type="bullet"&gt;
  &lt;item&gt;
    &lt;description&gt;tiles (Sprite) can be rotated/scaled/moved with a nice API&lt;/description&gt;
  &lt;/item&gt;
&lt;/list&gt;&lt;para&gt;tiles (&lt;see cref="T:Cocos2D.CCSprite" /&gt;) can be rotated/scaled/moved with a nice API&lt;/para&gt;&lt;see cref="T:Cocos2D.CCSprite" /&gt;&lt;para&gt;If the layer contains a property named "cc_vertexz" with an integer (in can be positive or negative), then all the tiles belonging to the layer will use that value as their OpenGL vertex Z for depth.&lt;/para&gt;&lt;para&gt;On the other hand, if the "cc_vertexz" property has the "automatic" value, then the tiles will use an automatic vertex Z value. Also before drawing the tiles, GL_ALPHA_TEST will be enabled, and disabled after drawing them. The used alpha func will be:&lt;/para&gt;&lt;para&gt;glAlphaFunc( GL_GREATER, value )&lt;/para&gt;&lt;para&gt;"value" by default is 0, but you can change it from Tiled by adding the "cc_alpha_func" property to the layer. The value 0 should work for most cases, but if you have tiles that are semi-transparent, then you might want to use a different value, like 0.5.&lt;/para&gt;&lt;para&gt;For further information, please see the programming guide:&lt;/para&gt;&lt;para&gt;
  &lt;ulink url="http://www.cocos2d-iphone.org/wiki/doku.php/prog_guide:tiled_maps"&gt;http://www.cocos2d-iphone.org/wiki/doku.php/prog_guide:tiled_maps&lt;/ulink&gt;
&lt;/para&gt;&lt;ulink url="http://www.cocos2d-iphone.org/wiki/doku.php/prog_guide:tiled_maps"&gt;http://www.cocos2d-iphone.org/wiki/doku.php/prog_guide:tiled_maps&lt;/ulink&gt;&lt;para&gt;
  &lt;para&gt;v0.8.1 Tiles can have tile flags for additional properties. At the moment only flip horizontal and flip vertical are used. These bit flags are defined in TMXXMLParser.h.&lt;/para&gt;
  &lt;simplesectsep /&gt;
  &lt;para&gt;1.1 &lt;/para&gt;
&lt;/para&gt;&lt;para&gt;v0.8.1 Tiles can have tile flags for additional properties. At the moment only flip horizontal and flip vertical are used. These bit flags are defined in TMXXMLParser.h.&lt;/para&gt;&lt;simplesectsep /&gt;&lt;para&gt;1.1 &lt;/para&gt;&lt;para&gt;v0.8.1 Tiles can have tile flags for additional properties. At the moment only flip horizontal and flip vertical are used. These bit flags are defined in TMXXMLParser.h.&lt;/para&gt;&lt;simplesectsep /&gt;&lt;para&gt;1.1 &lt;/para&gt;</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTMXLayer (Cocos2D.CCTMXTilesetInfo tilesetInfo, Cocos2D.CCTMXLayerInfo layerInfo, Cocos2D.CCTMXMapInfo mapInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Cocos2D.CCTMXTilesetInfo tilesetInfo, class Cocos2D.CCTMXLayerInfo layerInfo, class Cocos2D.CCTMXMapInfo mapInfo) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tilesetInfo" Type="Cocos2D.CCTMXTilesetInfo" />
        <Parameter Name="layerInfo" Type="Cocos2D.CCTMXLayerInfo" />
        <Parameter Name="mapInfo" Type="Cocos2D.CCTMXMapInfo" />
      </Parameters>
      <Docs>
        <param name="tilesetInfo">To be added.</param>
        <param name="layerInfo">To be added.</param>
        <param name="mapInfo">To be added.</param>
        <summary>creates a  with an tileset info, a layer info and a map info </summary>
        <remarks>&lt;para&gt;creates a &lt;see cref="T:Cocos2D.CCTMXLayer" /&gt; with an tileset info, a layer info and a map info &lt;/para&gt;&lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public override void AddChild (Cocos2D.CCNode child, int zOrder, int tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddChild(class Cocos2D.CCNode child, int32 zOrder, int32 tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Cocos2D.CCNode" />
        <Parameter Name="zOrder" Type="System.Int32" />
        <Parameter Name="tag" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="zOrder">To be added.</param>
        <param name="tag">To be added.</param>
        <summary> doesn't support adding a  manually. addchild(z, tag); is not supported on . Instead of setTileGID. </summary>
        <remarks>&lt;para&gt;
  &lt;see cref="T:Cocos2D.CCTMXLayer" /&gt; doesn't support adding a &lt;see cref="T:Cocos2D.CCSprite" /&gt; manually. &lt;para&gt;addchild(z, tag); is not supported on &lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;. Instead of setTileGID. &lt;/para&gt;&lt;/para&gt;&lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;&lt;see cref="T:Cocos2D.CCSprite" /&gt;&lt;para&gt;addchild(z, tag); is not supported on &lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;. Instead of setTileGID. &lt;/para&gt;&lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;&lt;para&gt;addchild(z, tag); is not supported on &lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;. Instead of setTileGID. &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitWithTilesetInfo">
      <MemberSignature Language="C#" Value="public bool InitWithTilesetInfo (Cocos2D.CCTMXTilesetInfo tilesetInfo, Cocos2D.CCTMXLayerInfo layerInfo, Cocos2D.CCTMXMapInfo mapInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InitWithTilesetInfo(class Cocos2D.CCTMXTilesetInfo tilesetInfo, class Cocos2D.CCTMXLayerInfo layerInfo, class Cocos2D.CCTMXMapInfo mapInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tilesetInfo" Type="Cocos2D.CCTMXTilesetInfo" />
        <Parameter Name="layerInfo" Type="Cocos2D.CCTMXLayerInfo" />
        <Parameter Name="mapInfo" Type="Cocos2D.CCTMXMapInfo" />
      </Parameters>
      <Docs>
        <param name="tilesetInfo">To be added.</param>
        <param name="layerInfo">To be added.</param>
        <param name="mapInfo">To be added.</param>
        <summary>initializes a  with a tileset info, a layer info and a map info </summary>
        <returns>To be added.</returns>
        <remarks>&lt;para&gt;initializes a &lt;see cref="T:Cocos2D.CCTMXLayer" /&gt; with a tileset info, a layer info and a map info &lt;/para&gt;&lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerName">
      <MemberSignature Language="C#" Value="public string LayerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LayerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerOrientation">
      <MemberSignature Language="C#" Value="public Cocos2D.CCTMXOrientation LayerOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Cocos2D.CCTMXOrientation LayerOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCTMXOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayerSize">
      <MemberSignature Language="C#" Value="public Cocos2D.CCSize LayerSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Cocos2D.CCSize LayerSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>set# LayerSize </summary>
        <value>To be added.</value>
        <remarks>set# LayerSize </remarks>
      </Docs>
    </Member>
    <Member MemberName="m_bUseAutomaticVertexZ">
      <MemberSignature Language="C#" Value="protected bool m_bUseAutomaticVertexZ;" />
      <MemberSignature Language="ILAsm" Value=".field family bool m_bUseAutomaticVertexZ" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_cOpacity">
      <MemberSignature Language="C#" Value="protected byte m_cOpacity;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8 m_cOpacity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_fAlphaFuncValue">
      <MemberSignature Language="C#" Value="protected float m_fAlphaFuncValue;" />
      <MemberSignature Language="ILAsm" Value=".field family float32 m_fAlphaFuncValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_fContentScaleFactor">
      <MemberSignature Language="C#" Value="protected float m_fContentScaleFactor;" />
      <MemberSignature Language="ILAsm" Value=".field family float32 m_fContentScaleFactor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_nVertexZvalue">
      <MemberSignature Language="C#" Value="protected int m_nVertexZvalue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 m_nVertexZvalue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_pAtlasIndexArray">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.List&lt;int&gt; m_pAtlasIndexArray;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Generic.List`1&lt;int32&gt; m_pAtlasIndexArray" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_pReusedTile">
      <MemberSignature Language="C#" Value="protected Cocos2D.CCSprite m_pReusedTile;" />
      <MemberSignature Language="ILAsm" Value=".field family class Cocos2D.CCSprite m_pReusedTile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCSprite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_sLayerName">
      <MemberSignature Language="C#" Value="protected string m_sLayerName;" />
      <MemberSignature Language="ILAsm" Value=".field family string m_sLayerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_uMaxGID">
      <MemberSignature Language="C#" Value="protected uint m_uMaxGID;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int32 m_uMaxGID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_uMinGID">
      <MemberSignature Language="C#" Value="protected uint m_uMinGID;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int32 m_uMinGID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapTileSize">
      <MemberSignature Language="C#" Value="public Cocos2D.CCSize MapTileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Cocos2D.CCSize MapTileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>set# MapTileSize </summary>
        <value>To be added.</value>
        <remarks>set# MapTileSize </remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionAt">
      <MemberSignature Language="C#" Value="public Cocos2D.CCPoint PositionAt (Cocos2D.CCPoint pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Cocos2D.CCPoint PositionAt(valuetype Cocos2D.CCPoint pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Cocos2D.CCPoint" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>returns the position in points of a given tile coordinate </summary>
        <returns>To be added.</returns>
        <remarks>returns the position in points of a given tile coordinate </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; Properties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setProperties </summary>
        <value>To be added.</value>
        <remarks>setProperties </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNamed">
      <MemberSignature Language="C#" Value="public string PropertyNamed (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PropertyNamed(string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>return the value for the specific property name </summary>
        <returns>To be added.</returns>
        <remarks>return the value for the specific property name </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMap">
      <MemberSignature Language="C#" Value="public void ReleaseMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseMap() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>dealloc the map that contains the tile position from memory.
 Unless you want to know at runtime the tiles positions, you can safely call this method. If you are going to call layer-&gt;tileGIDAt() then, don't release the map </summary>
        <remarks>&lt;para&gt;
  &lt;verbatim&gt;dealloc the map that contains the tile position from memory.
&lt;/verbatim&gt; Unless you want to know at runtime the tiles positions, you can safely call this method. If you are going to call layer-&amp;gt;&lt;ref refid="classcocos2d_1_1_t_m_x_layer_1aae99c774768f4161490800b45f71cf07" kindref="member"&gt;tileGIDAt()&lt;/ref&gt; then, don't release the map &lt;/para&gt;&lt;verbatim&gt;dealloc the map that contains the tile position from memory.
&lt;/verbatim&gt;&lt;ref refid="classcocos2d_1_1_t_m_x_layer_1aae99c774768f4161490800b45f71cf07" kindref="member"&gt;tileGIDAt()&lt;/ref&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public override void RemoveChild (Cocos2D.CCNode node, bool cleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveChild(class Cocos2D.CCNode node, bool cleanup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Cocos2D.CCNode" />
        <Parameter Name="cleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">The child node which will be removed. </param>
        <param name="cleanup">true if all running actions and callbacks on the child node will be cleanup, false otherwise. </param>
        <summary>Removes a child from the container. It will also cleanup all running actions depending on the cleanup parameter.</summary>
        <remarks>&lt;para&gt;Removes a child from the container. It will also cleanup all running actions depending on the cleanup parameter.&lt;/para&gt;&lt;para /&gt;&lt;parameterlist kind="param"&gt;
  &lt;parameteritem&gt;
    &lt;parameternamelist&gt;
      &lt;parametername&gt;child&lt;/parametername&gt;
    &lt;/parameternamelist&gt;
    &lt;parameterdescription&gt;
      &lt;para&gt;The child node which will be removed. &lt;/para&gt;
    &lt;/parameterdescription&gt;
  &lt;/parameteritem&gt;
  &lt;parameteritem&gt;
    &lt;parameternamelist&gt;
      &lt;parametername&gt;cleanup&lt;/parametername&gt;
    &lt;/parameternamelist&gt;
    &lt;parameterdescription&gt;
      &lt;para&gt;true if all running actions and callbacks on the child node will be cleanup, false otherwise. &lt;/para&gt;
    &lt;/parameterdescription&gt;
  &lt;/parameteritem&gt;
&lt;/parameterlist&gt;&lt;parameteritem&gt;
  &lt;parameternamelist&gt;
    &lt;parametername&gt;child&lt;/parametername&gt;
  &lt;/parameternamelist&gt;
  &lt;parameterdescription&gt;
    &lt;para&gt;The child node which will be removed. &lt;/para&gt;
  &lt;/parameterdescription&gt;
&lt;/parameteritem&gt;&lt;parameternamelist&gt;
  &lt;parametername&gt;child&lt;/parametername&gt;
&lt;/parameternamelist&gt;&lt;parametername&gt;child&lt;/parametername&gt;&lt;parameterdescription&gt;
  &lt;para&gt;The child node which will be removed. &lt;/para&gt;
&lt;/parameterdescription&gt;&lt;para&gt;The child node which will be removed. &lt;/para&gt;&lt;parameteritem&gt;
  &lt;parameternamelist&gt;
    &lt;parametername&gt;cleanup&lt;/parametername&gt;
  &lt;/parameternamelist&gt;
  &lt;parameterdescription&gt;
    &lt;para&gt;true if all running actions and callbacks on the child node will be cleanup, false otherwise. &lt;/para&gt;
  &lt;/parameterdescription&gt;
&lt;/parameteritem&gt;&lt;parameternamelist&gt;
  &lt;parametername&gt;cleanup&lt;/parametername&gt;
&lt;/parameternamelist&gt;&lt;parametername&gt;cleanup&lt;/parametername&gt;&lt;parameterdescription&gt;
  &lt;para&gt;true if all running actions and callbacks on the child node will be cleanup, false otherwise. &lt;/para&gt;
&lt;/parameterdescription&gt;&lt;para&gt;true if all running actions and callbacks on the child node will be cleanup, false otherwise. &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTileAt">
      <MemberSignature Language="C#" Value="public void RemoveTileAt (Cocos2D.CCPoint pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveTileAt(valuetype Cocos2D.CCPoint pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Cocos2D.CCPoint" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>removes a tile at given tile coordinate </summary>
        <remarks>removes a tile at given tile coordinate </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTileGID">
      <MemberSignature Language="C#" Value="public void SetTileGID (uint gid, Cocos2D.CCPoint pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTileGID(unsigned int32 gid, valuetype Cocos2D.CCPoint pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gid" Type="System.UInt32" />
        <Parameter Name="pos" Type="Cocos2D.CCPoint" />
      </Parameters>
      <Docs>
        <param name="gid">To be added.</param>
        <param name="pos">To be added.</param>
        <summary>sets the tile gid (gid = tile global id) at a given tile coordinate. The Tile GID can be obtained by using the method "tileGIDAt" or by using the TMX editor -&gt; Tileset Mgr +1. If a tile is already placed at that position, then it will be removed.</summary>
        <remarks>&lt;para&gt;sets the tile gid (gid = tile global id) at a given tile coordinate. The Tile GID can be obtained by using the method "tileGIDAt" or by using the TMX editor -&amp;gt; Tileset Mgr +1. If a tile is already placed at that position, then it will be removed.&lt;/para&gt;&lt;para&gt;Use withFlags if the tile flags need to be changed as well &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTileGID">
      <MemberSignature Language="C#" Value="public void SetTileGID (uint gid, Cocos2D.CCPoint pos, uint flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTileGID(unsigned int32 gid, valuetype Cocos2D.CCPoint pos, unsigned int32 flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gid" Type="System.UInt32" />
        <Parameter Name="pos" Type="Cocos2D.CCPoint" />
        <Parameter Name="flags" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="gid">To be added.</param>
        <param name="pos">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetupTiles">
      <MemberSignature Language="C#" Value="public void SetupTiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetupTiles() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates the tiles </summary>
        <remarks>Creates the tiles </remarks>
      </Docs>
    </Member>
    <Member MemberName="TileAt">
      <MemberSignature Language="C#" Value="public Cocos2D.CCSprite TileAt (Cocos2D.CCPoint pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Cocos2D.CCSprite TileAt(valuetype Cocos2D.CCPoint pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCSprite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Cocos2D.CCPoint" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>returns the tile (Sprite) at a given a tile coordinate.
 The returned  will be already added to the . Don't add it again. The  can be treated like any other : rotated, scaled, translated, opacity, color, etc. You can remove either by calling:layer-&gt;removeChild(sprite, cleanup);or layer-&gt;removeTileAt(Point(x,y)); </summary>
        <returns>To be added.</returns>
        <remarks>&lt;para&gt;
  &lt;verbatim&gt;returns the tile (Sprite) at a given a tile coordinate.
&lt;/verbatim&gt; The returned &lt;see cref="T:Cocos2D.CCSprite" /&gt; will be already added to the &lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;. Don't add it again. The &lt;see cref="T:Cocos2D.CCSprite" /&gt; can be treated like any other &lt;see cref="T:Cocos2D.CCSprite" /&gt;: rotated, scaled, translated, opacity, color, etc. You can remove either by calling:&lt;list type="bullet"&gt;&lt;item&gt;&lt;description&gt;layer-&amp;gt;removeChild(sprite, cleanup);&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;or layer-&amp;gt;removeTileAt(Point(x,y)); &lt;/description&gt;&lt;/item&gt;&lt;/list&gt;&lt;/para&gt;&lt;verbatim&gt;returns the tile (Sprite) at a given a tile coordinate.
&lt;/verbatim&gt;&lt;see cref="T:Cocos2D.CCSprite" /&gt;&lt;see cref="T:Cocos2D.CCTMXLayer" /&gt;&lt;see cref="T:Cocos2D.CCSprite" /&gt;&lt;see cref="T:Cocos2D.CCSprite" /&gt;&lt;list type="bullet"&gt;
  &lt;item&gt;
    &lt;description&gt;layer-&amp;gt;removeChild(sprite, cleanup);&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;or layer-&amp;gt;removeTileAt(Point(x,y)); &lt;/description&gt;
  &lt;/item&gt;
&lt;/list&gt;&lt;para&gt;layer-&amp;gt;removeChild(sprite, cleanup);&lt;/para&gt;&lt;para&gt;or layer-&amp;gt;removeTileAt(Point(x,y)); &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileGIDAt">
      <MemberSignature Language="C#" Value="public uint TileGIDAt (Cocos2D.CCPoint pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 TileGIDAt(valuetype Cocos2D.CCPoint pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Cocos2D.CCPoint" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>returns the tile gid at a given tile coordinate. It also returns the tile flags. This method requires the the tile map has not been previously released (eg. don't call [layer releaseMap]) </summary>
        <returns>To be added.</returns>
        <remarks>returns the tile gid at a given tile coordinate. It also returns the tile flags. This method requires the the tile map has not been previously released (eg. don't call [layer releaseMap]) </remarks>
      </Docs>
    </Member>
    <Member MemberName="TileGIDAt">
      <MemberSignature Language="C#" Value="public uint TileGIDAt (Cocos2D.CCPoint pos, out uint flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 TileGIDAt(valuetype Cocos2D.CCPoint pos, unsigned int32 flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Cocos2D.CCPoint" />
        <Parameter Name="flags" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tiles">
      <MemberSignature Language="C#" Value="public uint[] Tiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32[] Tiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSet">
      <MemberSignature Language="C#" Value="public Cocos2D.CCTMXTilesetInfo TileSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Cocos2D.CCTMXTilesetInfo TileSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCTMXTilesetInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>setTileSet </summary>
        <value>To be added.</value>
        <remarks>setTileSet </remarks>
      </Docs>
    </Member>
  </Members>
</Type>