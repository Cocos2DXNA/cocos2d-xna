<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCActionManager" FullName="Cocos2D.CCActionManager">
  <TypeSignature Language="C#" Value="public class CCActionManager : Cocos2D.ICCSelectorProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCActionManager extends System.Object implements class Cocos2D.ICCSelectorProtocol" />
  <AssemblyInfo>
    <AssemblyName>cocos2d-xna</AssemblyName>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Cocos2D.ICCSelectorProtocol</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>&lt;para&gt;
  &lt;see cref="T:Cocos2D.CCActionManager" /&gt; is a singleton that manages all the actions. Normally you won't need to use this singleton directly. 99% of the cases you will use the &lt;see cref="T:Cocos2D.CCNode" /&gt; interface, which uses this singleton. But there are some cases where you might need to use this singleton. Examples: &lt;/para&gt;&lt;see cref="T:Cocos2D.CCActionManager" /&gt;&lt;see cref="T:Cocos2D.CCNode" /&gt;</summary>
    <remarks>&lt;para&gt;
  &lt;list type="bullet"&gt;
    &lt;item&gt;
      &lt;description&gt;When you want to run an action where the target is different from a Node.&lt;/description&gt;
    &lt;/item&gt;
    &lt;item&gt;
      &lt;description&gt;When you want to pause / resume the actions&lt;/description&gt;
    &lt;/item&gt;
  &lt;/list&gt;
&lt;/para&gt;&lt;list type="bullet"&gt;
  &lt;item&gt;
    &lt;description&gt;When you want to run an action where the target is different from a Node.&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;When you want to pause / resume the actions&lt;/description&gt;
  &lt;/item&gt;
&lt;/list&gt;&lt;para&gt;When you want to run an action where the target is different from a &lt;see cref="T:Cocos2D.CCNode" /&gt;.&lt;/para&gt;&lt;see cref="T:Cocos2D.CCNode" /&gt;&lt;para&gt;When you want to pause / resume the actions&lt;/para&gt;&lt;para&gt;
  &lt;para&gt;v0.8 &lt;/para&gt;
&lt;/para&gt;&lt;para&gt;v0.8 &lt;/para&gt;&lt;para&gt;v0.8 &lt;/para&gt;</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCActionManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionAllocWithHashElement">
      <MemberSignature Language="C#" Value="protected void ActionAllocWithHashElement (Cocos2D.CCActionManager.HashElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ActionAllocWithHashElement(class Cocos2D.CCActionManager/HashElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Cocos2D.CCActionManager+HashElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAction">
      <MemberSignature Language="C#" Value="public void AddAction (Cocos2D.CCAction action, Cocos2D.CCNode target, bool paused);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAction(class Cocos2D.CCAction action, class Cocos2D.CCNode target, bool paused) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Cocos2D.CCAction" />
        <Parameter Name="target" Type="Cocos2D.CCNode" />
        <Parameter Name="paused" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="target">To be added.</param>
        <param name="paused">To be added.</param>
        <summary>Adds an action with a target. If the target is already present, then the action will be added to the existing target. If the target is not present, a new instance of this target will be created either paused or not, and the action will be added to the newly created target. When the target is paused, the queued actions won't be 'ticked'. </summary>
        <remarks>Adds an action with a target. If the target is already present, then the action will be added to the existing target. If the target is not present, a new instance of this target will be created either paused or not, and the action will be added to the newly created target. When the target is paused, the queued actions won't be 'ticked'. </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteHashElement">
      <MemberSignature Language="C#" Value="protected void DeleteHashElement (Cocos2D.CCActionManager.HashElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeleteHashElement(class Cocos2D.CCActionManager/HashElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Cocos2D.CCActionManager+HashElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CCActionManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionByTag">
      <MemberSignature Language="C#" Value="public Cocos2D.CCAction GetActionByTag (int tag, Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Cocos2D.CCAction GetActionByTag(int32 tag, class Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Int32" />
        <Parameter Name="target" Type="Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <param name="target">To be added.</param>
        <summary>Gets an action given its tag an a target the  the with the given tag </summary>
        <returns>To be added.</returns>
        <remarks>&lt;para&gt;Gets an action given its tag an a target &lt;para&gt;the &lt;see cref="T:Cocos2D.CCAction" /&gt; the with the given tag &lt;/para&gt;&lt;/para&gt;&lt;para&gt;the &lt;see cref="T:Cocos2D.CCAction" /&gt; the with the given tag &lt;/para&gt;&lt;see cref="T:Cocos2D.CCAction" /&gt;&lt;para&gt;the &lt;see cref="T:Cocos2D.CCAction" /&gt; the with the given tag &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfRunningActionsInTarget">
      <MemberSignature Language="C#" Value="public int NumberOfRunningActionsInTarget (Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NumberOfRunningActionsInTarget(class Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Returns the numbers of actions that are running in a certain target. Composable actions are counted as 1 action. Example:If you are running 1 Sequence of 7 actions, it will return 1.If you are running 7 Sequences of 2 actions, it will return 7. </summary>
        <returns>To be added.</returns>
        <remarks>&lt;para&gt;Returns the numbers of actions that are running in a certain target. Composable actions are counted as 1 action. Example:&lt;list type="bullet"&gt;&lt;item&gt;&lt;description&gt;If you are running 1 Sequence of 7 actions, it will return 1.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;description&gt;If you are running 7 Sequences of 2 actions, it will return 7. &lt;/description&gt;&lt;/item&gt;&lt;/list&gt;&lt;/para&gt;&lt;list type="bullet"&gt;
  &lt;item&gt;
    &lt;description&gt;If you are running 1 Sequence of 7 actions, it will return 1.&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;description&gt;If you are running 7 Sequences of 2 actions, it will return 7. &lt;/description&gt;
  &lt;/item&gt;
&lt;/list&gt;&lt;para&gt;If you are running 1 &lt;see cref="T:Cocos2D.CCSequence" /&gt; of 7 actions, it will return 1.&lt;/para&gt;&lt;see cref="T:Cocos2D.CCSequence" /&gt;&lt;para&gt;If you are running 7 Sequences of 2 actions, it will return 7. &lt;/para&gt;</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseAllRunningActions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;object&gt; PauseAllRunningActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;object&gt; PauseAllRunningActions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses all running actions, returning a list of targets whose actions were paused. </summary>
        <returns>To be added.</returns>
        <remarks>Pauses all running actions, returning a list of targets whose actions were paused. </remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseTarget">
      <MemberSignature Language="C#" Value="public void PauseTarget (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PauseTarget(object target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Pauses the target: all running actions and newly added actions will be paused. </summary>
        <remarks>Pauses the target: all running actions and newly added actions will be paused. </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAction">
      <MemberSignature Language="C#" Value="public void RemoveAction (Cocos2D.CCAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAction(class Cocos2D.CCAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Cocos2D.CCAction" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>Removes an action given an action reference. </summary>
        <remarks>Removes an action given an action reference. </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActionAtIndex">
      <MemberSignature Language="C#" Value="protected void RemoveActionAtIndex (int index, Cocos2D.CCActionManager.HashElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveActionAtIndex(int32 index, class Cocos2D.CCActionManager/HashElement element) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="Cocos2D.CCActionManager+HashElement" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActionByTag">
      <MemberSignature Language="C#" Value="public void RemoveActionByTag (int tag, Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveActionByTag(int32 tag, class Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Int32" />
        <Parameter Name="target" Type="Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="tag">To be added.</param>
        <param name="target">To be added.</param>
        <summary>Removes an action given its tag and the target </summary>
        <remarks>Removes an action given its tag and the target </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllActions">
      <MemberSignature Language="C#" Value="public void RemoveAllActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllActions() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all actions from all the targets. </summary>
        <remarks>Removes all actions from all the targets. </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllActionsFromTarget">
      <MemberSignature Language="C#" Value="public void RemoveAllActionsFromTarget (Cocos2D.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllActionsFromTarget(class Cocos2D.CCNode target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Cocos2D.CCNode" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Removes all actions from a certain target. All the actions that belongs to the target will be removed. </summary>
        <remarks>Removes all actions from a certain target. All the actions that belongs to the target will be removed. </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeTarget">
      <MemberSignature Language="C#" Value="public void ResumeTarget (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeTarget(object target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Resumes the target. All queued actions will be resumed. </summary>
        <remarks>Resumes the target. All queued actions will be resumed. </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeTargets">
      <MemberSignature Language="C#" Value="public void ResumeTargets (System.Collections.Generic.List&lt;object&gt; targetsToResume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeTargets(class System.Collections.Generic.List`1&lt;object&gt; targetsToResume) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetsToResume" Type="System.Collections.Generic.List&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="targetsToResume">To be added.</param>
        <summary>Resume a set of targets (convenience function to reverse a pauseAllRunningActions call) </summary>
        <remarks>Resume a set of targets (convenience function to reverse a pauseAllRunningActions call) </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (float dt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(float32 dt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dt" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dt">To be added.</param>
        <summary>To be added.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>