<?xml version="1.0" encoding="utf-8"?>
<Type Name="CCSpriteBatchNode" FullName="Cocos2D.CCSpriteBatchNode">
  <TypeSignature Language="C#" Value="public class CCSpriteBatchNode : Cocos2D.CCNode, Cocos2D.ICCTextureProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCSpriteBatchNode extends Cocos2D.CCNode implements class Cocos2D.ICCBlendProtocol, class Cocos2D.ICCTextureProtocol" />
  <AssemblyInfo>
    <AssemblyName>cocos2d-xna</AssemblyName>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Cocos2D.CCNode</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Cocos2D.ICCTextureProtocol</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> is like a batch node: if it contains children, it will draw them in 1 single OpenGL call (often known as "batch draw").</summary>
    <remarks>
      <para>
        <see cref="T:Cocos2D.CCSpriteBatchNode" /> is like a batch node: if it contains children, it will draw them in 1 single OpenGL call (often known as "batch draw").</para>
      <see cref="T:Cocos2D.CCSpriteBatchNode" />
      <para>A <see cref="T:Cocos2D.CCSpriteBatchNode" /> can reference one and only one texture (one image file, one texture atlas). Only the Sprites that are contained in that texture can be added to the <see cref="T:Cocos2D.CCSpriteBatchNode" />. All Sprites added to a <see cref="T:Cocos2D.CCSpriteBatchNode" /> are drawn in one OpenGL ES draw call. If the Sprites are not added to a <see cref="T:Cocos2D.CCSpriteBatchNode" /> then an OpenGL ES draw call will be needed for each one, which is less efficient.</para>
      <see cref="T:Cocos2D.CCSpriteBatchNode" />
      <see cref="T:Cocos2D.CCSpriteBatchNode" />
      <see cref="T:Cocos2D.CCSpriteBatchNode" />
      <see cref="T:Cocos2D.CCSpriteBatchNode" />
      <para>Limitations:<list type="bullet" /></para>
      <list type="bullet" />
      <para>
        <para>v0.7.1 </para>
      </para>
      <para>v0.7.1 </para>
      <item>
        <description>The only object that is accepted as child (or grandchild, grand-grandchild, etc...) is Sprite or any subclass of Sprite. eg: particles, labels and layer can't be added to a SpriteBatchNode.</description>
      </item>
      <description>The only object that is accepted as child (or grandchild, grand-grandchild, etc...) is Sprite or any subclass of Sprite. eg: particles, labels and layer can't be added to a SpriteBatchNode.</description>
      <item>
        <description>Either all its children are Aliased or Antialiased. It can't be a mix. This is because "alias" is a property of the texture, and all the sprites share the same texture.</description>
      </item>
      <description>Either all its children are Aliased or Antialiased. It can't be a mix. This is because "alias" is a property of the texture, and all the sprites share the same texture.</description>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSpriteBatchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>creates a SpriteBatchNode with a file image (.png, .jpeg, .pvr, etc) and capacity of children.
 The capacity will be increased in 33% in runtime if it run out of space. The file will be loaded using the TextureMgr. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSpriteBatchNode (Cocos2D.CCTexture2D tex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Cocos2D.CCTexture2D tex) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tex" Type="Cocos2D.CCTexture2D" />
      </Parameters>
      <Docs>
        <param name="tex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSpriteBatchNode (string fileImage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileImage) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileImage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileImage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSpriteBatchNode (Cocos2D.CCTexture2D tex, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Cocos2D.CCTexture2D tex, int32 capacity) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tex" Type="Cocos2D.CCTexture2D" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tex">To be added.</param>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCSpriteBatchNode (string fileImage, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileImage, int32 capacity) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileImage" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileImage">To be added.</param>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public override void AddChild (Cocos2D.CCNode child, int zOrder, int tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddChild(class Cocos2D.CCNode child, int32 zOrder, int32 tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Cocos2D.CCNode" />
        <Parameter Name="zOrder" Type="System.Int32" />
        <Parameter Name="tag" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">A child node </param>
        <param name="zOrder">Z order for drawing priority. Please refer to setZOrder(int)</param>
        <param name="tag">A interger to identify the node easily. Please refer to setTag(int)</param>
        <summary>Adds a child to the container with z order and tag</summary>
        <remarks>
          <para>Adds a child to the container with z order and tag</para>
          <para>If the child is added to a 'running' node, then 'onEnter' and 'onEnterTransitionDidFinish' will be called immediately.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSpriteWithoutQuad">
      <MemberSignature Language="C#" Value="protected Cocos2D.CCSpriteBatchNode AddSpriteWithoutQuad (Cocos2D.CCSprite child, int z, int aTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Cocos2D.CCSpriteBatchNode AddSpriteWithoutQuad(class Cocos2D.CCSprite child, int32 z, int32 aTag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCSpriteBatchNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Cocos2D.CCSprite" />
        <Parameter Name="z" Type="System.Int32" />
        <Parameter Name="aTag" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="z">To be added.</param>
        <param name="aTag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (Cocos2D.CCSprite sprite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class Cocos2D.CCSprite sprite) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sprite" Type="Cocos2D.CCSprite" />
      </Parameters>
      <Docs>
        <param name="sprite">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AtlasIndexForChild">
      <MemberSignature Language="C#" Value="public int AtlasIndexForChild (Cocos2D.CCSprite pobSprite, int nZ);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AtlasIndexForChild(class Cocos2D.CCSprite pobSprite, int32 nZ) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pobSprite" Type="Cocos2D.CCSprite" />
        <Parameter Name="nZ" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pobSprite">To be added.</param>
        <param name="nZ">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendFunc">
      <MemberSignature Language="C#" Value="public Cocos2D.CCBlendFunc BlendFunc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Cocos2D.CCBlendFunc BlendFunc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCBlendFunc</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the blending function that is currently being used.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the blending function that is currently being used.</para>
          <para>
            <para>A <see cref="T:Cocos2D.CCBlendFunc" /> structure with source and destination factor which specified pixel arithmetic. </para>
          </para>
          <para>A <see cref="T:Cocos2D.CCBlendFunc" /> structure with source and destination factor which specified pixel arithmetic. </para>
          <see cref="T:Cocos2D.CCBlendFunc" />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Descendants">
      <MemberSignature Language="C#" Value="public Cocos2D.CCRawList&lt;Cocos2D.CCSprite&gt; Descendants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Cocos2D.CCRawList`1&lt;class Cocos2D.CCSprite&gt; Descendants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCRawList&lt;Cocos2D.CCSprite&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public override void Draw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Draw() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Override this method to draw your own node. The following GL states will be enabled by default:</summary>
        <remarks>
          <para>Override this method to draw your own node. The following GL states will be enabled by default:<list type="bullet" /></para>
          <list type="bullet" />
          <item>
            <description>glEnableClientState(GL_VERTEX_ARRAY);</description>
          </item>
          <description>glEnableClientState(GL_VERTEX_ARRAY);</description>
          <item>
            <description>glEnableClientState(GL_COLOR_ARRAY);</description>
          </item>
          <description>glEnableClientState(GL_COLOR_ARRAY);</description>
          <item>
            <description>glEnableClientState(GL_TEXTURE_COORD_ARRAY);</description>
          </item>
          <description>glEnableClientState(GL_TEXTURE_COORD_ARRAY);</description>
          <item>
            <description>glEnable(GL_TEXTURE_2D); AND YOU SHOULD NOT DISABLE THEM AFTER DRAWING YOUR NODE But if you enable any other GL state, you should disable it after drawing your node. </description>
          </item>
          <description>glEnable(GL_TEXTURE_2D); AND YOU SHOULD NOT DISABLE THEM AFTER DRAWING YOUR NODE But if you enable any other GL state, you should disable it after drawing your node. </description>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighestAtlasIndexInChild">
      <MemberSignature Language="C#" Value="public int HighestAtlasIndexInChild (Cocos2D.CCSprite pSprite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 HighestAtlasIndexInChild(class Cocos2D.CCSprite pSprite) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSprite" Type="Cocos2D.CCSprite" />
      </Parameters>
      <Docs>
        <param name="pSprite">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseAtlasCapacity">
      <MemberSignature Language="C#" Value="public void IncreaseAtlasCapacity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncreaseAtlasCapacity() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public override bool Init ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Init() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the instance of Whether the initialization was successful. </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InitWithFile">
      <MemberSignature Language="C#" Value="protected virtual bool InitWithFile (string fileImage, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool InitWithFile(string fileImage, int32 capacity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileImage" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileImage">To be added.</param>
        <param name="capacity">To be added.</param>
        <summary>initializes a SpriteBatchNode with a file image (.png, .jpeg, .pvr, etc) and a capacity of children.
 The capacity will be increased in 33% in runtime if it run out of space. The file will be loaded using the TextureMgr. </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InitWithTexture">
      <MemberSignature Language="C#" Value="protected virtual bool InitWithTexture (Cocos2D.CCTexture2D tex, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool InitWithTexture(class Cocos2D.CCTexture2D tex, int32 capacity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tex" Type="Cocos2D.CCTexture2D" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tex">To be added.</param>
        <param name="capacity">To be added.</param>
        <summary>initializes a SpriteBatchNode with a texture2d and capacity of children.
 The capacity will be increased in 33% in runtime if it run out of space. </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InsertChild">
      <MemberSignature Language="C#" Value="public void InsertChild (Cocos2D.CCSprite pobSprite, int uIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertChild(class Cocos2D.CCSprite pobSprite, int32 uIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pobSprite" Type="Cocos2D.CCSprite" />
        <Parameter Name="uIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pobSprite">To be added.</param>
        <param name="uIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertQuadFromSprite">
      <MemberSignature Language="C#" Value="protected void InsertQuadFromSprite (Cocos2D.CCSprite sprite, int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InsertQuadFromSprite(class Cocos2D.CCSprite sprite, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sprite" Type="Cocos2D.CCSprite" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sprite">To be added.</param>
        <param name="index">To be added.</param>
        <summary>Inserts a quad at a certain index into the texture atlas. The  won't be added into the children array. This method should be called only when you are dealing with very big AtlasSrite and when most of the  won't be updated. For example: a tile map (TMXMap) or a label with lots of characters () </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LowestAtlasIndexInChild">
      <MemberSignature Language="C#" Value="public int LowestAtlasIndexInChild (Cocos2D.CCSprite pSprite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LowestAtlasIndexInChild(class Cocos2D.CCSprite pSprite) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSprite" Type="Cocos2D.CCSprite" />
      </Parameters>
      <Docs>
        <param name="pSprite">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_blendFunc">
      <MemberSignature Language="C#" Value="protected Cocos2D.CCBlendFunc m_blendFunc;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype Cocos2D.CCBlendFunc m_blendFunc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCBlendFunc</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_pobDescendants">
      <MemberSignature Language="C#" Value="protected Cocos2D.CCRawList&lt;Cocos2D.CCSprite&gt; m_pobDescendants;" />
      <MemberSignature Language="ILAsm" Value=".field family class Cocos2D.CCRawList`1&lt;class Cocos2D.CCSprite&gt; m_pobDescendants" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCRawList&lt;Cocos2D.CCSprite&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_pobTextureAtlas">
      <MemberSignature Language="C#" Value="protected Cocos2D.CCTextureAtlas m_pobTextureAtlas;" />
      <MemberSignature Language="ILAsm" Value=".field family class Cocos2D.CCTextureAtlas m_pobTextureAtlas" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCTextureAtlas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RebuildIndexInOrder">
      <MemberSignature Language="C#" Value="public int RebuildIndexInOrder (Cocos2D.CCSprite pobParent, int uIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RebuildIndexInOrder(class Cocos2D.CCSprite pobParent, int32 uIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pobParent" Type="Cocos2D.CCSprite" />
        <Parameter Name="uIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pobParent">To be added.</param>
        <param name="uIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildrenWithCleanup">
      <MemberSignature Language="C#" Value="public override void RemoveAllChildrenWithCleanup (bool cleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAllChildrenWithCleanup(bool cleanup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cleanup">true if all running actions on all children nodes should be cleanup, false oterwise. </param>
        <summary>Removes all children from the container, and do a cleanup to all running actions depending on the cleanup parameter.</summary>
        <remarks>
          <para>Removes all children from the container, and do a cleanup to all running actions depending on the cleanup parameter.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public override void RemoveChild (Cocos2D.CCNode child, bool cleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveChild(class Cocos2D.CCNode child, bool cleanup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Cocos2D.CCNode" />
        <Parameter Name="cleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="child">The child node which will be removed. </param>
        <param name="cleanup">true if all running actions and callbacks on the child node will be cleanup, false otherwise. </param>
        <summary>Removes a child from the container. It will also cleanup all running actions depending on the cleanup parameter.</summary>
        <remarks>
          <para>Removes a child from the container. It will also cleanup all running actions depending on the cleanup parameter.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChildAtIndex">
      <MemberSignature Language="C#" Value="public void RemoveChildAtIndex (int index, bool doCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChildAtIndex(int32 index, bool doCleanup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="doCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="doCleanup">To be added.</param>
        <summary>removes a child given a certain index. It will also cleanup the running actions depending on the cleanup parameter.
Removing a child from a  is very slow </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveSpriteFromAtlas">
      <MemberSignature Language="C#" Value="public void RemoveSpriteFromAtlas (Cocos2D.CCSprite pobSprite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSpriteFromAtlas(class Cocos2D.CCSprite pobSprite) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pobSprite" Type="Cocos2D.CCSprite" />
      </Parameters>
      <Docs>
        <param name="pobSprite">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderBatch">
      <MemberSignature Language="C#" Value="public void ReorderBatch (bool reorder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReorderBatch(bool reorder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reorder" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reorder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderChild">
      <MemberSignature Language="C#" Value="public override void ReorderChild (Cocos2D.CCNode child, int zOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ReorderChild(class Cocos2D.CCNode child, int32 zOrder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Cocos2D.CCNode" />
        <Parameter Name="zOrder" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">An already added child node. It MUST be already added. </param>
        <param name="zOrder">Z order for drawing priority. Please refer to setZOrder(int)</param>
        <summary>Reorders a child according to a new z value.</summary>
        <remarks>
          <para>Reorders a child according to a new z value.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortAllChildren">
      <MemberSignature Language="C#" Value="public override void SortAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SortAllChildren() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sorts the children array once before drawing, instead of every time when a child is added or reordered. This appraoch can improves the performance massively. Don't call this manually unless a child added needs to be removed in the same frame </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Texture">
      <MemberSignature Language="C#" Value="public virtual Cocos2D.CCTexture2D Texture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Cocos2D.CCTexture2D Texture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCTexture2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets a new texuture. It will be retained.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Sets a new texuture. It will be retained.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureAtlas">
      <MemberSignature Language="C#" Value="public Cocos2D.CCTextureAtlas TextureAtlas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Cocos2D.CCTextureAtlas TextureAtlas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Cocos2D.CCTextureAtlas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateQuadFromSprite">
      <MemberSignature Language="C#" Value="protected void UpdateQuadFromSprite (Cocos2D.CCSprite sprite, int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateQuadFromSprite(class Cocos2D.CCSprite sprite, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sprite" Type="Cocos2D.CCSprite" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sprite">To be added.</param>
        <param name="index">To be added.</param>
        <summary>Updates a quad at a certain index into the texture atlas. The  won't be added into the children array. This method should be called only when you are dealing with very big AtlasSrite and when most of the  won't be updated. For example: a tile map (TMXMap) or a label with lots of characters () </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Visits this node's children and draw them recursively. </summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>